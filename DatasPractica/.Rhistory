summary(abri2021)
abri2021$DOC_1<-as.numeric(abri2021$DOC_1)
summary(abri2021)
View(abri2021)
abri2021<-mutate(abri2021,DOC_1=DOC_1+2)
summary(feb2022)
feb2022<-mutate(feb2022,DOC_1=gsub("[^0-9]", "", DOC))
summary(feb2022)
feb2022$DOC_1<-as.numeric(feb2022$DOC_1)
feb2022<-mutate(feb2022,DOC_1=DOC_1+2)
summary(feb2022)
jul2022<-mutate(jul2022,DOC_1=gsub("[^0-9]", "", DOC))
summary(jul2022)
jul2022$DOC_1<-as.numeric(jul2022$DOC_1)
summary(jul2022)
jul2022<-mutate(jul2022,DOC_1=DOC_1+2)
summary(jul2022)
abri2021$APELLIDO1<-CASAS
abri2021$APELLIDO1<-"CASAS"
View(abri2021)
abri2021$APELLIDO2<-"ROJAS"
View(abri2021)
View(feb2022)
feb2022$APELLIDO1<-"CASAS"
feb2022$APELLIDO2<-"ROJAS"
jul2022$APELLIDO1<-"CASAS"
jul2022$APELLIDO2<-"ROJAS"
View(abri2021)
abri2021<-abri2021[,-15]
View(abri2021)
View(feb2022)
feb20221<-feb2022[,-13]
View(jul2022)
jul2022<-jul2022[,-13]
feb2022<-feb2022[,-13]
View(feb2022)
library(readxl)
library(dplyr)
library(tidyr)
library(writexl)
write_xlsx(abri2021,"Baseabri2021.xlsx")
write_xlsx(feb2022,"Basefeb2022.xlsx")
write_xlsx(jul2022,"Basejul2022.xlsx")
library(readxl)
library(dplyr)
library(tidyr)
library(writexl)
library(readxl)
library(dplyr)
library(tidyr)
library(writexl)
base1<-read_xlsx("Baseabri2021.xlsx")
View(base1)
summary(base1)
str(base1)
View(base1)
base1<-filter(base1,ESTADO=="MATRICULADO")
base1<-filter(base1,SECTOR=="OFICIAL")
View(base1)
base1<-filter(base1,GRADO_COD>=4 & GRADO_COD<=10)
base1<-read_xlsx("Baseabri2021.xlsx")
summary(base1)
str(base1)
base1<-filter(base1,ESTADO=="MATRICULADO")
base1<-filter(base1,SECTOR=="OFICIAL")
base2<-filter(base1,GRADO_COD>=4 & GRADO_COD<=10,area=="rural")
base2<-filter(base1,GRADO_COD>=4 & GRADO_COD<=10,ZONA_SEDE=="rural")
View(base2)
base2<-filter(base1,GRADO_COD>=4 & GRADO_COD<=10,ZONA_SEDE=="RURAL")
group_by(base2,DANE)
grado10urbanos<-filter(base1,GRADO_COD==10 & ZONA_SEDE=="URBANO")
grado10urbanos<-filter(base1,GRADO_COD=="10" & ZONA_SEDE=="URBANO")
View(base1)
grado10urbanos<-filter(base1,GRADO_COD==10 & ZONA_SEDE=="URBANA")
base3<-bind_rows(base2,grado10urbanos)
group_by(base3,DANE)
View(base3)
base4<-select(base3,-c(1,6,12,13,14,22,23,24))
View(base4)
group_by(base4,JERARQUIA)
summary(base4)
####Variable Provincia
provincias<-read_xlsx("provincia-municipio.xlsx")
base5<-left_join(provincias,base4,by="MUNICIPIO")
base4<-rename(base4,MUNICIPIO=JERARQUIA)
base5<-left_join(provincias,base4,by="MUNICIPIO")
summary(base5)
summary(base4)
summary(base4)
View(base5)
base5<-base4[base4$MUNICIPIO==GAMBITA]<-"GÁMBITA"
base5<-base4[base4$MUNICIPIO=="GAMBITA"]<-"GÁMBITA"
base4$MUNICIPIO[base4$MUNICIPIO=="GAMBITA"]<-"GÁMBITA"
base4$MUNICIPIO[base4$MUNICIPIO=="LEBRÍJA"]<-"LEBRIJA"
base5<-left_join(provincias,base4,by="MUNICIPIO")
summary(base5)
filter(base5,is.na(GRADO_COD))
base5<-right_join(provincias,base4,by="MUNICIPIO")
View(base5)
summary(base5)
base5$FECHA_NACIMIENTO<-as.Date(base5$FECHA_NACIMIENTO)
unit="year"))
base5<-mutate(base5,
EDAD=floor(time_length(ymd(Sys.Date())-ymd(base5$FECHA_NACIMIENTO),
unit="year")))
library(lubridate)
base5<-mutate(base5,
EDAD=floor(time_length(ymd(Sys.Date())-ymd(base5$FECHA_NACIMIENTO),
unit="year")))
summary(base5)
View(base5)
base6<-select(base5,c(2,1,4,3,6,7,5,8,9,10,18,11,12:17,19))
View(base6)
View(base6)
View(base6)
View(base6)
soporte<-select(base6,-c(3,7,18))
View(soporte)
View(soporte)
soporte<-unite(soporte,NOMBRES,c(13,14,11,12),sep = " ")
View(soporte)
soporte<-rename(soporte,
COLEGIO=INSTITUCION,
GRADOS=GRADO_COD,CURSO=GRUPO,SEXO=GENERO,
DOCUMENTO=DOC_1)
summary(soporte)
soporte$SEXO[soporte$SEXO=="MASCULINO"]<-0
soporte$SEXO[soporte$SEXO=="FEMENINO"]<-0
summary(soporte)
View(soporte)
###Seleccionar variables
soporte<-select(base6,-c(3,7,18))
soporte<-unite(soporte,NOMBRES,c(13,14,11,12),sep = " ")
soporte<-rename(soporte,
COLEGIO=INSTITUCION,
GRADOS=GRADO_COD,CURSO=GRUPO,SEXO=GENERO,
DOCUMENTO=DOC_1)
summary(soporte)
View(soporte)
soporte$SEXO[soporte$SEXO=="MASCULINO"]<-0
soporte$SEXO[soporte$SEXO=="FEMENINO"]<-1
summary(soporte)
View(base6)
base7<-mutate_at(base6,vars(1,2,4,5:10,12:17))
base7<-mutate_at(base6,vars(1,2,4,5:10,12:17),as.factor)
summary(base7)
View(soporte)
soporte1<-mutate_at(soporte,vars(1:8,10,11))
soporte1<-mutate_at(soporte,vars(1:8,10,11),as.factor)
summary(soporte1)
write_xlsx(base7,"registrados.xlsx")
library(readxl)
library(dplyr)
library(tidyr)
library(writexl)
library(lubridate)
summary(base7)
datas1 <- split(base7,base7$INSTITUCION)
View(datas1)
datas1 <- group_by(base7,DANE,INSTITUCION)
datas1 <- group_by(base7,DANE,INSTITUCION)
datas1<-summarise(datas1,TOTAL=n())
View(datas1)
datas1 <- unique(base7$INSTITUCION)
datas1 <- unique(base7$DANE)
datas1
datas1 <- split(base7,base7$DANE)
DANE <- levels(base7$DANE)
base7$DANE<-as.factor(base7$DANE)
summary(base7)
datas1 <- split(base7,base7$DANE)
DANE <- levels(base7$DANE)
for (i in seq_along(datas1)){
coleg<-paste(DANE[i],".xlsx",collapse="")
write.xlsx(datas1[[i]],
file = coleg)
}
library(readxl)
library(dplyr)
library(tidyr)
library(writexl)
library(lubridate)
for (i in seq_along(datas1)){
coleg<-paste(DANE[i],".xlsx",collapse="")
write.xlsx(datas1[[i]],
file = coleg)
}
library(xlsx)
for (i in seq_along(datas1)){
coleg<-paste(DANE[i],".xlsx",collapse="")
write.xlsx(datas1[[i]],
file = coleg)
}
for (i in seq_along(datas1)){
coleg<-paste(DANE[i],".xlsx",collapse="")
write.xlsx(datas1[i],
file = coleg)
}
for (i in seq_along(datas1)){
coleg<-paste(DANE[i],".xlsx",collapse="")
write.xlsx(datas1[[i]],
file = coleg)
}
datas1[1]
datas1[[1]]
?write.xlsx
?seq_along
base2restantes<-filter(base1,GRADO_COD>=4 & GRADO_COD <=10)
numdoc<-base7$DOC_1
numdoc
length(numdoc)
base8<-filter(base2restantes, !numdoc %in% base7)
base8<-filter(base7, !numdoc %in% base2restantes)
base8<-filter(base2restantes, !numdoc %in% base7)
base8<-filter(base2restantes, !DOC_1 %in% numdoc)
basetotal<-base2restantes
###Elimino columnas o variables que no necesito
basetotal<-select(basetotal,-c(1,6,12,13,14,22,23,24))
summary(basetotal)
basetotal<-rename(basetotal,MUNICIPIO=JERARQUIA)
summary(basetotal)
View(basetotal)
basetotal<-left_join(provincias,basetotal,by="MUNICIPIO")
summary(basetotal)
basetotal<-base2restantes
###Elimino columnas o variables que no necesito
basetotal<-select(basetotal,-c(1,6,12,13,14,22,23,24))
summary(basetotal)
####Variable Provincia
provincias<-read_xlsx("provincia-municipio.xlsx")
basetotal<-rename(basetotal,MUNICIPIO=JERARQUIA)
basetotal$MUNICIPIO[basetotal$MUNICIPIO=="GAMBITA"]<-"GÁMBITA"
basetotal$MUNICIPIO[basetotal$MUNICIPIO=="LEBRÍJA"]<-"LEBRIJA"
basetotal1<-left_join(provincias,basetotal,by="MUNICIPIO")
summary(basetotal1)
basetotal1<-right_join(provincias,basetotal,by="MUNICIPIO")
summary(basetotal1)
basetotal1$FECHA_NACIMIENTO<-as.Date(basetotal1$FECHA_NACIMIENTO)
basetotal1$FECHA_NACIMIENTO<-as.Date(basetotal1$FECHA_NACIMIENTO)
basetotal1<-mutate(basetotal1,
EDAD=floor(time_length(ymd(Sys.Date())-ymd(basetotal1$FECHA_NACIMIENTO),
unit="year")))
basetotal1<-select(basetotal1,c(2,1,4,3,6,7,5,8,9,10,18,11,12:17,19))
###Seleccionar variables
soportetotal<-select(basetotal1,-c(3,7,18))
soportetotal<-unite(soportetotal,NOMBRES,c(13,14,11,12),sep = " ")
soportetotal<-rename(soportetotal,
COLEGIO=INSTITUCION,
GRADOS=GRADO_COD,CURSO=GRUPO,SEXO=GENERO,
DOCUMENTO=DOC_1)
summary(soportetotal)
soportetotal$SEXO[soportetotal$SEXO=="MASCULINO"]<-0
soportetotal$SEXO[soportetotal$SEXO=="FEMENINO"]<-1
basetotal1<-mutate_at(basetotal1,vars(1,2,4,5:10,12:17),as.factor)
summary(basetotal1)
soportetotal<-mutate_at(soportetotal,vars(1:8,10,11),as.factor)
summary(soporte1soportetotal)
summary(basetotal1)
library(readxl)
library(dplyr)
library(tidyr)
library(writexl)
library(lubridate)
library(xlsx)
View(feb20221)
View(feb20221)
View(feb20221)
simatfeb25<-filter(feb20221,
ESTADO=="MATRICULADO",SECTOR=="OFICIAL",
GRADO_COL>=4)
simatfeb25<-filter(feb20221,
ESTADO=="MATRICULADO",SECTOR=="OFICIAL",
GRADO_COD>=4)
DOC2021<-basetotal1$DOC_1
simatfeb25_1<-filter(simatfeb25, !DOC_1 %in% DOC2021)
View(simatfeb25_1)
View(basetotal1)
####Elimino columnas o variables que no necesito
simatfeb25_1<-select(basetotal,-c(1,6,12,13,20,21))
####Elimino columnas o variables que no necesito
simatfeb25_1<-select(simatfeb25_1,-c(1,6,12,13,20,21))
summary(simatfeb25_1)
simatfeb25_1<-rename(simatfeb25_1,MUNICIPIO=JERARQUIA)
simatfeb25_1$MUNICIPIO[basetotal$MUNICIPIO=="GAMBITA"]<-"GÁMBITA"
simatfeb25_1$MUNICIPIO[simatfeb25_1$MUNICIPIO=="GAMBITA"]<-"GÁMBITA"
simatfeb25_1$MUNICIPIO[simatfeb25_1$MUNICIPIO=="LEBRÍJA"]<-"LEBRIJA"
simatfeb25_1<-right_join(provincias,simatfeb25_1,by="MUNICIPIO")
summary(simatfeb25_1)
simatfeb25_1$FECHA_NACIMIENTO<-as.Date(simatfeb25_1$FECHA_NACIMIENTO)
simatfeb25_1<-mutate(simatfeb25_1,
EDAD=floor(time_length(ymd(Sys.Date())-ymd(simatfeb25_1$FECHA_NACIMIENTO),
unit="year")))
simatfeb25_1<-filter(simatfeb25, !DOC_1 %in% DOC2021)
####Elimino columnas o variables que no necesito
simatfeb25_1<-select(simatfeb25_1,-c(1,6,12,20,21))
summary(simatfeb25_1)
simatfeb25_1<-rename(simatfeb25_1,MUNICIPIO=JERARQUIA)
simatfeb25_1$MUNICIPIO[simatfeb25_1$MUNICIPIO=="GAMBITA"]<-"GÁMBITA"
simatfeb25_1$MUNICIPIO[simatfeb25_1$MUNICIPIO=="LEBRÍJA"]<-"LEBRIJA"
simatfeb25_1<-right_join(provincias,simatfeb25_1,by="MUNICIPIO")
summary(simatfeb25_1)
simatfeb25_1$FECHA_NACIMIENTO<-as.Date(simatfeb25_1$FECHA_NACIMIENTO)
simatfeb25_1<-mutate(simatfeb25_1,
EDAD=floor(time_length(ymd(Sys.Date())-ymd(simatfeb25_1$FECHA_NACIMIENTO),
unit="year")))
summary(simatfeb25_1)
simatfeb25_1<-select(simatfeb25_1,c(2,1,4,3,6,7,5,8,9,10,18,11,12:17,19))
###Seleccionar variables
soportesimatfeb25_1<-select(simatfeb25_1,-c(3,7,18))
soportesimatfeb25_1<-unite(soportesimatfeb25_1,NOMBRES,c(13,14,11,12),sep = " ")
View(soportesimatfeb25_1)
soportesimatfeb25_1<-rename(soportesimatfeb25_1,
COLEGIO=INSTITUCION,
GRADOS=GRADO_COD,CURSO=GRUPO,SEXO=GENERO,
DOCUMENTO=DOC_1)
summary(soportesimatfeb25_1)
soportesimatfeb25_1$SEXO[soportesimatfeb25_1$SEXO=="MASCULINO"]<-0
soportesimatfeb25_1$SEXO[soportesimatfeb25_1$SEXO=="FEMENINO"]<-1
simatfeb25_1<-mutate_at(simatfeb25_1,vars(1,2,4,5:10,12:17),as.factor)
summary(simatfeb25_1)
soportesimatfeb25_1<-mutate_at(soportesimatfeb25_1,vars(1:8,10,11),as.factor)
summary(soportesimatfeb25_1)
totalfeb<-bind_rows(basetotal1,simatfeb25_1)
soportotalfeb<-bind_rows(soportetotal,soportesimatfeb25_1)
usabilidad<-read_xlsx("4.Usabilidad.xlsx")
library(readxl)
library(dplyr)
library(tidyr)
library(writexl)
usabilidad<-read_xlsx("4.Usabilidad.xlsx")
View(usabilidad)
usabilidad<-read_xlsx("4.Usabilidad.xlsx")
usabilidad<-read_xlsx("4.Usabilidad.xlsx")
usabilidad<-read_xlsx("4.Usabilidad.xlsx")
View(usabilidad)
usabilidad<-mutate(usabilidad,ID_1=gsub("[^0-9]", "", ID))
summary(usabilidad)
usabilidad$ID_1<-as.numeric(usabilidad$ID_1)
usabilidad<-mutate(usabilidad,ID_1=ID_1+2)
summary(usabilidad)
usabilidad<-usabilidad[,-7]
write_xlsx(usabilidad,"Baseusabilidad.xlsx")
basejul<-read_xlsx("Basejul2022.xlsx")
basejul1<-filter(basejul,ESTADO=="MATRICULADO",SECTOR=="OFICIAL")
docID<-basejul1$DOC_1
usabilidad_matriculados<-filter(usabilidad, ID_1 %in% docID)
usabilidad_NO_matriculados<-filter(usabilidad, !ID_1 %in% docID)
View(usabilidad_matriculados)
View(usabilidad_NO_matriculados)
usab_no_matri_no_avance<-filter(usabilidad_NO_matriculados,AVANCE=="0.00%")
usab_no_matri_SI_avance<-filter(usabilidad_NO_matriculados,AVANCE!="0.00%")
View(basejul1)
library(readxl)
library(dplyr)
library(tidyr)
library(writexl)
library(lubridate)
library(xlsx)
View(usabilidad_matriculados)
View(usabilidad_matriculados)
base8
library(readxl)
library(dplyr)
library(tidyr)
library(writexl)
library(lubridate)
library(xlsx)
library(xlsx)
install.packages("xlsx")
library(readxl)
library(dplyr)
library(tidyr)
library(writexl)
library(lubridate)
library(xlsx)
install.packages("xlsx")
library(xlsx)
base1<-read_xlsx("Baseabri2021.xlsx")
summary(base1)
base1
base1<-read_xlsx("Baseabri2021.xlsx",sheet = 1)
base1
base1<-read_xlsx("Baseabri2021.xlsx",sheet = 2)
base1
summary(base1)
str(base1)
View(base1)
adecuada<-mutate_at(base1,vars(1,2,3),as.factor)
summary(adecuada)
base1<-filter(base1,ESTADO=="MATRICULADO")
summary(base1)
base1<-filter(base1,SECTOR=="OFICIAL")
base2<-filter(base1,GRADO_COD>=4 & GRADO_COD<=10,ZONA_SEDE=="RURAL")
View(base2)
base1<-read_xlsx("Baseabri2021.xlsx",sheet = 2)
summary(base1)
str(base1)
base1<-filter(base1,ESTADO=="MATRICULADO")
base1<-filter(base1,SECTOR=="OFICIAL")
base1<-read_xlsx("Baseabri2021.xlsx",sheet = 2)
base1<-read_xlsx("Baseabri2021.xlsx",sheet = 2)
base1<-filter(base1,ESTADO=="MATRICULADO")
base1<-filter(base1,SECTOR=="OFICIAL")
group_by(base2,DANE) #236 IE
group_by(base2,DANE) #236 IE
grado10urbanos<-filter(base1,GRADO_COD==10 & ZONA_SEDE=="URBANA")
base3<-bind_rows(base2,grado10urbanos)
group_by(base3,DANE)
summary(adecuada)
###Elimino columnas o variables que no necesito
base4<-select(base3,-c(1,6,12,13,14,22,23,24))
base4
####Variable Provincia
provincias<-read_xlsx("provincia-municipio.xlsx")
View(base4)
base4<-rename(base4,MUNICIPIO=JERARQUIA)
View(base4)
base5<-left_join(provincias,base4,by="MUNICIPIO")
summary(base5) #Mostrar prooblema y evidenciar la importancia de estandarizar
base4$MUNICIPIO[base4$MUNICIPIO=="GAMBITA"]<-"GÁMBITA"
base4$MUNICIPIO[base4$MUNICIPIO=="LEBRÍJA"]<-"LEBRIJA"
base5<-left_join(provincias,base4,by="MUNICIPIO")
summary(base5)
base5<-right_join(provincias,base4,by="MUNICIPIO")
summary(base5)
base5$FECHA_NACIMIENTO<-as.Date(base5$FECHA_NACIMIENTO)
Sys.Date()
base5<-mutate(base5,
EDAD=floor(time_length(ymd(Sys.Date())-ymd(base5$FECHA_NACIMIENTO),
unit="year")))
View(base5)
left_
base5<-left_join(provincias,base4,by="MUNICIPIO")
summary(base5)
filter(base5,is.na(DOC_1))
base5<-right_join(provincias,base4,by="MUNICIPIO")
summary(base5)
base5
View(base5)
base5<-mutate(base5,
EDAD=floor(time_length(ymd(Sys.Date())-ymd(base5$FECHA_NACIMIENTO),
unit="year")))
View(base5)
base6<-select(base5,c(2,1,4,3,6,7,5,8,9,10,18,11,12:17,19))
base6
View(base6)
View(base6)
###Seleccionar variables
soporte<-select(base6,-c(3,7,18))
soporte<-unite(soporte,NOMBRES,c(13,14,11,12),sep = "_")
soporte
View(soporte)
soporte<-rename(soporte,
COLEGIO=INSTITUCION,
GRADOS=GRADO_COD,CURSO=GRUPO,SEXO=GENERO,
DOCUMENTO=DOC_1)
summary(soporte)
soporte$SEXO[soporte$SEXO=="MASCULINO"]<-0
soporte$SEXO[soporte$SEXO=="FEMENINO"]<-1
base7<-mutate_at(base6,vars(1,2,4,5:10,12:17),as.factor)
summary(base7)
soporte1<-mutate_at(soporte,vars(1:8,10,11),as.factor)
summary(soporte1)
write_xlsx(base7,"registrados.xlsx")
summary(base7)
base7$DANE<-as.factor(base7$DANE)
datas1 <- split(base7,base7$DANE)
DANE <- levels(base7$DANE)
for (i in seq_along(datas1)){
coleg<-paste(DANE[i],".xlsx",collapse="")
write.xlsx(datas1[[i]], ##Escoja únicamente el elemento de la lista
file = coleg)
}
for (i in seq_along(datas1)){
coleg<-paste(DANE[i],".xlsx",collapse="")
write_xlsx(datas1[[i]], ##Escoja únicamente el elemento de la lista
file = coleg)
}
write_xlsx(datas1[[i]], ##Escoja únicamente el elemento de la lista
path = coleg)
for (i in seq_along(datas1)){
coleg<-paste(DANE[i],".xlsx",collapse="")
write_xlsx(datas1[[i]], ##Escoja únicamente el elemento de la lista
path = coleg)
}
seq_along(datas1)
write_xlsx(base7,"registrados.xlsx")
summary(base7)
base7$DANE<-as.factor(base7$DANE)
DANE <- levels(base7$DANE)
DANE
datas1 <- split(base7,base7$DANE)
datas1 <- split(base7,base7$DANE)
datas1
base7$DANE<-as.factor(base7$DANE)
datas1 <- split(base7,base7$DANE)
DANE <- levels(base7$DANE)
seq_along(datas1)
DANE[1]
DANE[2]
for (i in seq_along(datas1)){
coleg<-paste(DANE[i],".xlsx",collapse="")
write_xlsx(datas1[[i]], ##Escoja únicamente el elemento de la lista
path = coleg)
}
getwd()
base2restantes<-filter(base1,GRADO_COD>=4 & GRADO_COD <=10)
numdoc<-base7$DOC_1
numdoc
length(numdoc)
base8<-filter(base2restantes, !DOC_1 %in% numdoc) #%in% verificar la presencia de elementos en un vector o una lista
base8
